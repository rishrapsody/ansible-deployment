---
- name: "Core Base config"
  hosts: core
  connection: network_cli

  tasks:
    - name: "Configuring core routers base config"
      cli_config:
        config: "{{lookup('template','core_base_template.j2')}}"

- name: "Switch Base Config"
  hosts: switch
  connection: network_cli

  tasks:
    - name: "Configuring switch base config"
      cli_config:
        config: "{{lookup('template','switch_base_template.j2')}}"

- name: "Firewall Base Config"
  hosts: firewall
  become: yes
  become_method: sudo

  tasks:
    - name: "Configuring firewall base config"
      blockinfile:
        block: "{{ lookup('template','fw_base_template.j2') }}"
        path: /etc/network/interfaces
#    - name: "Enable interfaces"
#      shell: reboot
#      loop: "{{interfaces | map(attribute='name') | list}}"

- name: "Customer router config"
  hosts: customer
  connection: network_cli

  tasks:
    - name: "Building directory space"
      include_tasks: deploy/tasks/build_config_directory.yml

    - name: "Building customer config"
      include_tasks: deploy/tasks/prep_cust_config.yml

    - name: "Push customer config"
      include_tasks: deploy/tasks/push_cust_rtr_config.yml

- name: "Configuring Switch for customer"
  hosts: switch
  connection: network_cli

  tasks:
    - name: "Preparing switch config"
      include_tasks: deploy/tasks/prep_switch_cust_config.yml

    - name: "Push switch config"
      include_tasks: deploy/tasks/push_switch_cust_config.yml


- name: "Configuring Core  for customer"
  hosts: core
  connection: network_cli

  tasks:
    - name: "Preparing core config"
      include_tasks: deploy/tasks/prep_core_rtr_cust_config.yml

    - name: "Push core config"
      include_tasks: deploy/tasks/push_core_rtr_cust_config.yml

    - name: "Get Public IP per customer"
      include_tasks: deploy/tasks/get_pub_ip_cust.yml

#    - name: "Command output"
#      cli_command:
#        command: "show run | sec nat pool"
#      register: out
#      tags: test
#
#    - name: "Create vars file for Public IP"
#      set_fact:
#        dictlist: "{{dictlist|default([]) + [{'cust': item.0, 'ip': item.1}] }}"
#      with_together:
#        - "{{out.stdout | regex_findall('.*pool (.*)_pub_ip.*') | list}}"
#        - "{{out.stdout | regex_findall('.* (\\d+.\\d+.\\d+.\\d+) prefix-length.*') | list}}"
#      tags: test
#
#    - name: "Set name to var data"
#      set_fact:
#        var1 : "temp: {{dictlist}}"
#      tags: test
#
#    - name: "Save variable to file"
#      copy:
#        content: "{{var1}}"
#        dest: deploy/vars/ext_dictvars.yml
#      tags: test

- name: "Firewall NAT rules"
  hosts: firewall
  tags: fw
  become: yes
  become_method: sudo

  tasks:
    - name: "Configure firewall iptables per customer"
      include_tasks: deploy/tasks/configure_fw_iptables.yml

    - name: "Configure firewall route per customer"
      include_tasks: deploy/tasks/configure_fw_route.yml

#    - name: "Include vars"
#      include_vars:
#        dir: deploy/vars/
#        extensions:
#          - 'yml'
#        name: var1
#
##    - name: "Set name to var data  new"
##      set_fact:
##        var2: "{{var1}}"
#
#
#    - name: "Added iptables rule for NAT"
#      iptables:
#        chain: POSTROUTING
#        table: nat
#        source: "{{item.ip}}"
#        comment: nat for customer "{{item.cust}}"
#        out_interface: eth0
#        jump: MASQUERADE
#        ctstate: ESTABLISHED,RELATED
#      become: yes
#      loop:
#        "{{ var1['temp'] }}"


