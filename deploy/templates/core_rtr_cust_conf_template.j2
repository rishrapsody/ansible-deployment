{% for cust in customer %}
ip vrf {{cust.vrf.name}}
rd {{cust.id}}:{{cust.id}}


int {{cust.int.name}}.{{cust.id}}
ip vrf forwarding {{cust.int.vrf}}
no shutdown
encapsulation dot1q {{cust.id}}
ip nat inside
ip address {{cust.int.ip}} {{cust.int.netmask}}
description {{cust.int.vrf}}_customer

{% if inventory_hostname == 'core02' %}
route-map {{cust.routemap.name}}-{{cust.int.vrf}} permit 10
set as-path prepend last-as {{cust.routemap.prepend}}
exit
{% endif %}

router bgp 11179
{% for peer in cust['bgp'] %}
address-family ipv4 vrf {{peer.address_family}}
neighbor {{peer.remote_ip}} remote-as {{peer.remote_as}}
neighbor {{peer.remote_ip}} activate
neighbor {{peer.remote_ip}} soft-reconfiguration inbound
{% if inventory_hostname == 'core02' %}
neighbor {{peer.remote_ip}} route-map {{peer.adv_map_out}} out
{% endif %}
default-information originate
exit-address-family
{% endfor %}
ip nat pool {{cust.vrf.name}}_pub_ip {{cust.nat.subnet | ipmath(cust.id)}} {{cust.nat.subnet | ipmath(cust.id)}} prefix-length 30
ip access-list standard {{cust.vrf.name}}_lan
permit any
exit

ip nat inside source list {{cust.vrf.name}}_lan pool {{cust.vrf.name}}_pub_ip vrf {{cust.vrf.name}} overload
{% if inventory_hostname == 'core01' %}
ip route vrf {{cust.vrf.name}} 0.0.0.0 0.0.0.0 10.10.10.1 global
{% else %}
ip route vrf {{cust.vrf.name}} 0.0.0.0 0.0.0.0 10.10.20.1 global
{% endif %}

{% endfor %}
